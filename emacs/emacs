;; EQC Emacs Mode -- Configuration Start
(add-to-list 'load-path "/ldisk/mange/Downloads/Quviq QuickCheck version 1.30.5/eqc-1.30.5/emacs/")
(autoload 'eqc-erlang-mode-hook "eqc-ext" "EQC Mode" t)
(add-hook 'erlang-mode-hook 'eqc-erlang-mode-hook)
(setq eqc-max-menu-length 30)
(setq eqc-root-dir "/ldisk/mange/Downloads/Quviq QuickCheck version 1.30.5/eqc-1.30.5")
;; EQC Emacs Mode -- Configuration End

;; Snabbkommandon
(global-set-key "\M-g" 'goto-line)
(global-set-key "\C-cc" 'compile)
(global-set-key "\C-u" 'undo)
;;(global-set-key "\C-c-u" 'uncomment-region)

;;Window/buffer
;;(global-set-key [f4]  'split-window-horizontally)
;;(global-set-key [f5]  'split-window-vertically)

(global-set-key [M-left]  'windmove-left)
(global-set-key [M-right]  'windmove-right)
(global-set-key [M-up]  'windmove-up)
(global-set-key [M-down]  'windmove-down)
(global-set-key [M-backspace] 'delete-window)
(global-set-key [C-up] 'beginning-of-buffer)
(global-set-key [C-down] 'end-of-buffer)
(global-set-key [M-c] 'comment-region)
(global-set-key [M-u] 'uncomment-region)

(global-font-lock-mode 't)

;; turn off welcome screen
(setq inhibit-startup-message t)

;; Mouse and scroll
(setq mouse-wheel-scroll-amount '(2 ((shift) . 1))) ;; one line at a time
(setq mouse-wheel-progressive-speed nil) ;; don't accelerate scrolling
(setq mouse-wheel-follow-mouse 't) ;; scroll window under mouse
(setq scroll-step 1) ;; keyboard scroll one line at a time

;; display date and time always
(setq display-time-day-and-date t)
(display-time)

;; type "y"/"n" instead of "yes"/"no"
(fset 'yes-or-no-p 'y-or-n-p)

;; Indentation
(setq standard-indent 4)
(setq c-default-style "linux"
          c-basic-offset 4)
(setq-default indent-tabs-mode nil) 

(setq show-trailing-whitespace 't)


;; Delete button
(global-set-key [delete] 'delete-char)


;; Misc settings
(setq visible-bell t)

;; Temporary emacs files
(setq backup-directory-alist
      `((".*" . ,temporary-file-directory)))
;;(setq auto-save-file-name-transforms
;;     `((".*" ,temporary-file-directory t)))
(setq auto-save-default nil)

;; Erlang mode
(setq load-path (cons "/ldisk/mange/git/otp/lib/tools/emacs/" load-path))
;;(setq load-path (cons "/usr/local/otp/releases/opensource/linux_x86_osuse12.1_latest/lib/erlang/lib/tools-2.6.6.6/emacs" load-path))
(setq erlang-root-dir "/ldisk/mange/git/otp")
(setq exec-path (cons "/ldisk/mange/git/otp/bin" exec-path))
(require 'erlang-start)
(add-hook 'erlang-new-file-hook 'tempo-template-erlang-large-header)

;; Edit hooks
(add-hook 'before-save-hook 'delete-trailing-whitespace)

;;(setq erlang-root-dir "/usr/local/otp/releases/opensource/linux_x86_osuse12.1/lib/erlang/")
;;(setq exec-path (cons "/usr/local/otp/releases/opensource/linux_x86_osuse12.1/lib/erlang/bin" exec-path))

;; Color theme
(add-to-list 'load-path "/usr/share/xemacs21/site-lisp/emacs-goodies-el")
(require 'color-theme)
(eval-after-load "color-theme"
  '(progn
     (color-theme-initialize)
     (color-theme-deep-blue)))

;; Visual
(custom-set-variables
  ;; custom-set-variables was added by Custom.
  ;; If you edit it by hand, you could mess it up, so be careful.
  ;; Your init file should contain only one such instance.
  ;; If there is more than one, they won't work right.
 '(c-syntactic-indentation t)
 '(delete-selection-mode nil)
 '(mark-even-if-inactive t)
 '(safe-local-variable-values (quote ((eval add-hook (quote write-file-hooks) (quote time-stamp)))))
 '(scroll-bar-mode (quote right))
 '(show-paren-mode t)
 '(size-indication-mode t))
(custom-set-faces
  ;; custom-set-faces was added by Custom.
  ;; If you edit it by hand, you could mess it up, so be careful.
  ;; Your init file should contain only one such instance.
  ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :background "white" :foreground "black" :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 98 :width normal :foundry "unknown" :family "Droid Sans Mono")))))
